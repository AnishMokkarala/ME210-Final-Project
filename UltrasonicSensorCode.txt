#include <Arduino.h>

#define echoPin 19 // attach pin D2 Arduino to pin Echo of HC-SR04
#define trigPin 20 //attach pin D3 Arduino to pin Trig of HC-SR04

// defines variables
long duration; // variable for the duration of sound wave travel
int distance; // variable for the distance measurement
int current_time;
typedef enum{
    WAITING,TRIGBEGIN,TRIGGERING,READING
} States_t;

States_t ultra_case=WAITING;

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an OUTPUT
  pinMode(echoPin, INPUT); // Sets the echoPin as an INPUT
  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
//   Serial.println("Ultrasonic Sensor HC-SR04 Test"); // print some text in Serial Monitor
//   Serial.println("with Arduino UNO R3");
}
void loop() {

switch (ultra_case){
  case WAITING: // should only be in this case once
    digitalWrite(trigPin,LOW);// set trig to LOW
    current_time = millis();
    ultra_case = TRIGBEGIN; // update case
    break;

  case TRIGBEGIN:
    if (millis()-current_time >=2){ // waits 2 microseconds
      digitalWrite(trigPin,HIGH);
      current_time = millis(); // update time
      ultra_case = TRIGGERING; // update case
    }
    break;

  case TRIGGERING:
    if (millis() - current_time >=10){ // waits 10 seconds before echo
      digitalWrite(trigPin, LOW); // set trig to low
      ultra_case = READING;
    }
    break;

  case READING:
    duration = pulseIn(echoPin, HIGH);
    distance = duration * 0.034 / 2;
    // print if wanted
    ultra_case = TRIGBEGIN; // update case
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");
    current_time = millis();
    break;
}
//   // Clears the trigPin condition
//   digitalWrite(trigPin, LOW);
//   delayMicroseconds(2);
//   // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
//   digitalWrite(trigPin, HIGH);
//   delayMicroseconds(10);
//   digitalWrite(trigPin, LOW);
//   // Reads the echoPin, returns the sound wave travel time in microseconds
//   duration = pulseIn(echoPin, HIGH);
//   // Calculating the distance
//   distance = duration * 0.034 / 2; // Speed of sound wave divided by 2 (go and back)
//   // Displays the distance on the Serial Monitor
//   Serial.print("Distance: ");
//   Serial.print(distance);
//   Serial.println(" cm");
}